//--------------------------------------------------------------------------------------
//    LenMus Phonascus: The teacher of music
//    Copyright (c) 2002-2007 Cecilio Salmeron
//
//    This program is free software; you can redistribute it and/or modify it under the
//    terms of the GNU General Public License as published by the Free Software Foundation;
//    either version 2 of the License, or (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful, but WITHOUT ANY
//    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
//    PARTICULAR PURPOSE.  See the GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along with this
//    program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
//    Fifth Floor, Boston, MA  02110-1301, USA.
//
//    For any comment, suggestion or feature request, please contact the manager of
//    the project at cecilios@users.sourceforge.net
//
//-------------------------------------------------------------------------------------

// Generated by DialogBlocks (unregistered), 06/27/05 08:05:07

#ifndef _MIDIWIZARD_H_
#define _MIDIWIZARD_H_

#if defined(__GNUG__) && !defined(__APPLE__)
#pragma interface "MidiWizard.cpp"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/wizard.h"
#include "wx/statline.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
class WizardDevicesPage;
class WizardInstrumentsPage;
class WizardMetronomePage;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_WIZARD 10000
#define SYMBOL_MIDIWIZARD_IDNAME ID_WIZARD
#define ID_WIZARD_DEVICES_PAGE 10001
#define ID_COMBO_OUT_DEVICES 10004
#define ID_COMBO_IN_DEVICES 10005
#define ID_WIZARD_INSTRUMENTS_PAGE 10002
#define ID_COMBO_CHANNEL 10008
#define ID_COMBO_SECTION 10006
#define ID_COMBO_INSTRUMENT 10007
#define ID_BUTTON_TEST_SOUND 10009
#define ID_WIZARD_METRONOME_PAGE 10003
#define ID_COMBO_MTR_CHANNEL 10010
#define ID_COMBO_MTR_INSTR1 10011
#define ID_COMBO_MTR_INSTR2 10012
#define ID_BUTTON 10013
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif
#ifndef wxFIXED_MINSIZE
#define wxFIXED_MINSIZE 0
#endif

/*!
 * lmMidiWizard class declaration
 */

class lmMidiWizard: public wxWizard
{
    DECLARE_DYNAMIC_CLASS( lmMidiWizard )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    lmMidiWizard( );
    lmMidiWizard( wxWindow* parent, wxWindowID id = SYMBOL_MIDIWIZARD_IDNAME, const wxPoint& pos = wxDefaultPosition );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_MIDIWIZARD_IDNAME, const wxPoint& pos = wxDefaultPosition );

    /// Creates the controls and sizers
    void CreateControls();

////@begin lmMidiWizard event handler declarations

    /// wxEVT_WIZARD_CANCEL event handler for ID_WIZARD
    void OnWizardCancel( wxWizardEvent& event );

    /// wxEVT_WIZARD_FINISHED event handler for ID_WIZARD
    void OnWizardFinished( wxWizardEvent& event );

////@end lmMidiWizard event handler declarations

////@begin lmMidiWizard member function declarations

    /// Runs the wizard.
    bool Run();

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end lmMidiWizard member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin lmMidiWizard member variables
    WizardMetronomePage* m_pMtrChannelCombo;
////@end lmMidiWizard member variables

private:

    //old Midi configuration
    int        m_nOldInDevId;
    int        m_nOldOutDevId;
    int        m_nOldVoiceInstr;
    int        m_nOldVoiceChannel;
    int        m_nOldMtrInstr;
    int        m_nOldMtrChannel;
    int        m_nOldMtrTone1;
    int        m_nOldMtrTone2;

};

/*!
 * WizardDevicesPage class declaration
 */

class WizardDevicesPage: public wxWizardPageSimple
{
    DECLARE_DYNAMIC_CLASS( WizardDevicesPage )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    WizardDevicesPage( );

    WizardDevicesPage( wxWizard* parent );

    /// Creation
    bool Create( wxWizard* parent );

    /// Creates the controls and sizers
    void CreateControls();

////@begin WizardDevicesPage event handler declarations

////@end WizardDevicesPage event handler declarations

////@begin WizardDevicesPage member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end WizardDevicesPage member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

    bool TransferDataFromWindow();

////@begin WizardDevicesPage member variables
    wxComboBox* m_pOutCombo;
    wxComboBox* m_pInCombo;
////@end WizardDevicesPage member variables
};

/*!
 * WizardInstrumentsPage class declaration
 */

class WizardInstrumentsPage: public wxWizardPageSimple
{
    DECLARE_DYNAMIC_CLASS( WizardInstrumentsPage )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    WizardInstrumentsPage( );

    WizardInstrumentsPage( wxWizard* parent );

    /// Creation
    bool Create( wxWizard* parent );

    /// Creates the controls and sizers
    void CreateControls();

////@begin WizardInstrumentsPage event handler declarations

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBO_SECTION
    void OnComboSection( wxCommandEvent& event );

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBO_INSTRUMENT
    void OnComboInstrument( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON_TEST_SOUND
    void OnButtonTestSoundClick( wxCommandEvent& event );

////@end WizardInstrumentsPage event handler declarations

////@begin WizardInstrumentsPage member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end WizardInstrumentsPage member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

    bool TransferDataFromWindow();
    void DoProgramChange();

////@begin WizardInstrumentsPage member variables
    wxComboBox* m_pVoiceChannelCombo;
    wxComboBox* m_pSectCombo;
    wxComboBox* m_pInstrCombo;
////@end WizardInstrumentsPage member variables
};

/*!
 * WizardMetronomePage class declaration
 */

class WizardMetronomePage: public wxWizardPageSimple
{
    DECLARE_DYNAMIC_CLASS( WizardMetronomePage )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    WizardMetronomePage( );

    WizardMetronomePage( wxWizard* parent );

    /// Creation
    bool Create( wxWizard* parent );

    /// Creates the controls and sizers
    void CreateControls();

////@begin WizardMetronomePage event handler declarations

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBO_MTR_INSTR1
    void OnComboMtrInstr1Selected( wxCommandEvent& event );

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBO_MTR_INSTR2
    void OnComboMtrInstr2Selected( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON
    void OnButtonClick( wxCommandEvent& event );

////@end WizardMetronomePage event handler declarations

////@begin WizardMetronomePage member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end WizardMetronomePage member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin WizardMetronomePage member variables
    wxComboBox* m_pMtrChannelCombo;
    wxComboBox* m_pMtrInstr1Combo;
    wxComboBox* m_pMtrInstr2Combo;
////@end WizardMetronomePage member variables
};

#endif
    // _MIDIWIZARD_H_
