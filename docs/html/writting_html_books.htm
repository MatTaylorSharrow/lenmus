<html>
<!-- RCS-ID: $Id: writting_html_books.htm,v 1.2 2006/03/01 19:19:30 cecilios Exp $ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Writting eMusicBooks</title>
<link rel="stylesheet" media="all" href="singledoc.css" type="text/css" />
</head>

<body>

<h1>LenMus eMusicBooks format</h1>

<h2><a name="TOC">Table of Contents</a></h2>

<dl><dt>Introduction</dt>
    <dt>1. <a href="#File_format">File format</a></dt>
    <dt>2. <a href="#Header_file">Header file</a></dt>
    <dt>3. <a href="#Contents_files">Contents files</a></dt>
    <dt>3. <a href="#Index_file">Index file</a></dt>
    <dt>4. <a href="#Page_files">Page files</a></dt>
    <dt>5. <a href="#HTML_tags">HTML tags supported</a></dt>
    <dt>6. <a href="#OBJECT_tag">The OBJECT tag</a>
    <dd><dl>
        <dt>6.1. <a href="#SideReadingCtrolParams">SideReadingCtrolParams</a></dt>
        <dt>6.2. <a href="#Fragment_syntax">Fragment syntax</a></dt>
        <dt>6.3. <a href="#description_TimeSign">The Time element</a></dt>
        <dt>6.4. <a href="#description_Barline">The Barline element</a></dt>
        </dl></dd></dt>
    <dt>8. <a href="#Notes_Rests_Chords">Notes, rests and chords</a>
    <dd><dl>
        <dt>8.1. <a href="#Pitch">Pitch</a></dt>
        <dt>8.2. <a href="#description_Duration">Duration</a></dt>
        </dl></dd></dt>

</dl>

<h2><a name="File_format">File format</a></h2>
<a href="#TOC">TOC</a>
<p>
LenMus eMusicBooks are written in HTML. Scores an interactive exercises are embedded by
using the &lt;object&gt; tag. All the html pages that form an eMusicBook are packaged using
a reduced version of Microsoft's HTML Help Workshop project files (.hhp, .hhk, .hhc, .htm).</p>

<p>
A book consists of three main files: a header file (.hhp), a table of contents file (.hhc) and an
index file (.hhk), and as many page files (.htm) as you would like. In addition you have to include
any image files you need.
All these files are packaged into a single zip archive; and the .zip file
must be renamed to .htb (htb stands for "html book").</p>



<h2><a name="Header_file">Header file (.hhp)</a></h2>
<a href="#TOC">TOC</a>

<p>
The header file (also known as
project file) describes a book. Basically, it contains the book title and
references to the table of content file and the index file, as well as some
parameters. There must exists one header file per book.</p>

<p>
Header file must contain these
lines (and may contain additional lines which will be ignored): </p>

<pre>
Contents file=&lt;filename.hhc&gt;
Title=&lt;title of this book&gt;
Default topic=&lt;default_page_to_be_displayed.htm&gt;
&nbsp;
</pre>

<p>All filenames (including the Default topic) are relative to the location of .hhp file. </p>

<p>
In addition, an .hhp file may contain the line </p>

<pre>
Charset=&lt;rfc_charset&gt;
</pre>

<p>
which specifies what charset
(e.g. &quot;ISO-8859-1&quot;) was used in contents and index files. Please note
that this line is incompatible with MS HTML Help Workshop and it would either
silently remove it or complain with some error.</p>

<p>
Optionally, if an index file
has been compiled, the header file must contain a line like:</p>

<pre>
Index file=&lt;filename.hhk&gt;
&nbsp;
</pre>

<p>
to specify the associated index file.</p>


<h2><a name="Contents_files">Contents files (.hhc)</a></h2>
<a href="#TOC">TOC</a>

<p>
The contents file describes the
TOC for one book. It has HTML syntax and contains exactly one list
(&lt;ul&gt;....&lt;/ul&gt;
 statement) but items in this
main list may contain nested sub lists, to describe, for example, the content
of the chapters and sections. Here is an example: </p>

<pre>
&lt;! DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML//EN&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;!-- Example of Table of content file --&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;ul&gt;
        &lt;li&gt; &lt;object type=&quot;text/sitemap&quot;&gt;
               &lt;param name=&quot;Name&quot; value=&quot;Chapter 1. Introduction&quot;&gt;
               &lt;param name=&quot;Local&quot; value=&quot;Book1Chaper1.htm&quot;&gt;
                &lt;/object&gt;
        &lt;li&gt; &lt;object type=&quot;text/sitemap&quot;&gt;
               &lt;param name=&quot;Name&quot; value=&quot;Chapter 2. Intervals”&gt;
               &lt;param name=&quot;ID&quot; value=34&gt;
               &lt;param name=&quot;Local&quot; value=&quot; Book1Chaper2.htm&quot;&gt;
               &lt;/object&gt;
        &lt;ul&gt;
               &lt;li&gt; &lt;object type=&quot;text/sitemap&quot;&gt;
                       &lt;param name=&quot;Name&quot; value=&quot;2.1 Simple intervals&quot;&gt;
                       &lt;param name=&quot;Local&quot; value=&quot;Book1Section1.htm&quot;&gt;
                       &lt;/object&gt;
        &lt;/ul&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
The value of param <b>Name</b>
is the name of the chapter/topic as you would like it to be displayed in the
table of contents.</p>

<p>
The value of param <b>Local</b>
is the filename of the HTML page associated to that content. Filename must
include the relative path to base folder containing the .hhp file. </p>

<p>
The param <b>ID</b> is optional,
and it is used only when a page will be displayed, programmatically, from the
program, for example, for context sensitive help display. Its value is a unique
number, to be use by the program to refer to that page.</p>


<h2><a name="Index_file">Index file (.hhk)</a></h2>
<a href="#TOC">TOC</a>

<p>
The index file contains a list of
terms/words with a reference to the relevant book/page where each term appears.</p>

<p>
The index file has the same
format as a content file except that ID params are ignored and sub lists are
not allowed. Here is an example:</p>

<pre>
&lt;! DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML//EN&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;!-- Index file example --&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;ul&gt;
        &lt;li&gt; &lt;object type=&quot;text/sitemap&quot;&gt;
               &lt;param name=&quot;Name&quot; value=&quot;Interval, definition&quot;&gt;
               &lt;param name=&quot;Local&quot; value=&quot;Book3Page7.htm&quot;&gt;
               &lt;/object&gt;
        &lt;li&gt; &lt;object type=&quot;text/sitemap&quot;&gt;
               &lt;param name=&quot;Name&quot; value=&quot;Interval, minor an major&quot;&gt;
               &lt;param name=&quot;Local&quot; value=&quot;Book3Page8.htm&quot;&gt;
               &lt;/object&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>


<h2><a name="Page_files">Page files (.htm)</a></h2>
<a href="#TOC">TOC</a>

<p>Page files are the documents to
display, written in standard HTML with the restrictions and additions described
in the rest of this documentation.</p>

<p>&nbsp;</p>

<p><b>Warning about testing</b></p>

<p>When displaying the
documentation, the LenMus program creates cached binary versions of index and
contents files and store them in the lenmus/temp/ directory. These binary
forms are much faster to read. But note that these files are not deleted when
program exits. If these files are present, the source header, content and index
files will no be read. So for testing, if you modify one of these files, be
sure that you delete the corresponding cache file; otherwise you will not see
any modification!! </p>

<h2><a name="HTML_tags">HTML tags supported</a></h2>
<a href="#TOC">TOC</a>

<p>
The HTML browser implemented in
LenMus program is based on wxWidgets facilities. This is not a full implementation of
the HTML standard. But it supports the most common tags so that it is possible
to create and display complex documents with good formatting. For example it
works fine with pages created in Netscape Composer. </p>

<p>
Following tables list all
supported tags, together with supported attributes.
A tag has general form </p>
<pre>
&lt;tagname attrib_1 attrib_2 ... attrib_n&gt;
</pre>

<p>where  attrib_i has the form:</p>

<pre>
attribute_name=&quot;value&quot;
</pre>

<p>To follow the XHTML standard all tags and attributes have to be in lower
case letters.</p>


<h2>List of supported tags </h2>
<a href="#TOC">TOC</a>

<pre>
a               name=[string]
                href=[url]
                target=[target window spec]
address
area            shape=poly
                shape=circle
                shape=rect
                coords=[coords]
                href=[url]
b
big
blockquote
body            text=[color]
                link=[color]
                bgcolor=[color]
br              align=[alignment]
center
cite
code
dd
div             align=[alignment]
dl
dt
em
font            color=[color]
                size=[fontsize]
                face=[comma-separated list of facenames]
hr              align=[alignment]
                size=[pixels]
                width=[percent|pixels]
                noshade
h1
h2
h3
h4
h5
h6
i
img             src=[url]
                width=[pixels]
                height=[pixels]
                align=texttop
                align=center
                align=abscenter
                align=bottom
                usemap=[url]
kbd
li
map             name=[string]
meta
            http-equiv=&quot;content-type&quot;
                content=[string]
ol
p               align=[alignment]
pre
samp
small
strike
strong
table           align=[alignment]
                width=[percent|pixels]
                border=[pixels]
                valign=[v_alignment]
                bgcolor=[color]
                cellspacing=[pixels]
                cellpadding=[pixels]
td              align=[alignment]
                valign=[v_alignment]
                bgcolor=[color]
                width=[percent|pixels]
                colspan=[pixels]
                rowspan=[pixels]
th              align=[alignment]
                valign=[v_alignment]
                bgcolor=[color]
                width=[percent|pixels]
                colspan=[pixels]
                rowspan=[pixels]
title
tr              align=[alignment]
                valign=[v_alignment]
                bgcolor=[color]
tt
u
ul
&nbsp;
</pre>

<h2>Table of values </h2>
<a href="#TOC">TOC</a>

<p>
These are the valid values for
the attributes before described: </p>

<pre>
[alignment]     center
                left
                right
                justify
&nbsp;
[v_alignment]   top
                bottom
                center

[color]         HTML 4.0-compliant colour specification
&nbsp;
[fontsize]      -2
                -1
                +0
                +1
                +2
                +3
                +4
                 1
                 2
                 3
                 4
                 5
                 6
                 7
&nbsp;
[pixels]        integer value that represents dimension in pixels
&nbsp;
[percent]       i%
                where i is integer
&nbsp;
[url]           an URL
&nbsp;
[string]        text string
&nbsp;
[coords]        c(1),c(2),c(3),...,c(n)
                where c(i) is integer
&nbsp;
</pre>


<h2><a name="OBJECT_tag">The OBJECT tag</a></h2>
<a href="#TOC">TOC</a>

<p>
In addition to the previous
listed tags, the &lt;object&gt; tag must be used to include LenMus program
content, such as scores, interactive exercises and musical symbols.</p>

<p>
By using the &lt;object&gt; tag
we ensure compliance with the HTML standard so that LenMus eMusicBooks and
documentation can be displayed in any web browser, although the LenMus specific
features will not be displayed unless a plug-in is included in the browser.
But, in any case, you will be able to display the book and no error will be shown.</p>

<h3><a name="SideReadingCtrolParams">SideReadingCtrolParams</a></h3>
<a href="#TOC">TOC</a>

<pre>
    Params for lmScoreCtrol - html object type="Application/LenMusTheoSideReading"


        optional params to include controls: (not yet implemented marked as [])
        --------------------------------------

        control*        one param for each control to include.
                            value="play"     include 'play' link. Default: include it.
                            [value="solfa"]  include 'solfa' link. Default: do not include it.

        control_settings   Value="[key for storing the settings]"
                            This param forces to include the 'settings' link. The
                            key will be used both as the key for saving the user settings
                            and as a tag to select the Setting Dialog options to allow.

        control_go_back    URL, i.e.: "v2_L2_SideReading_203.htm"

        [label_play]    "play label|stop playing label". i.e.: "Play|Stop" Stop label
                        is optional. Default labels: "Play|Stop playing"
        [label_solfa]   "side read label|stop side reading label". i.e.: "Play|Stop" Stop label
                        is optional. Default labels: "Side read|Stop reading"


        params to set up the score composer:
        ------------------------------------

        fragment*   one param for each fragment to use

        clef*       one param for each allowed clef. It includes the pitch scope.

        time        a list of allowed time signatures, i.e.: "68,98,128"

        key         keyword "all" or a list of allowed key signatures, i.e.: "Do,Fas"

        maxInterval    a number indicating the maximum allowed interval for two consecutive notes
                        Default: 4


        Example:
        ------------------------------------

        &lt;object type="Application/LenMusTheoSideReading" width="100%" height="300" border="0"&gt;
            &lt;param name="control" value="play"&gt;
            &lt;param name="label_play" value="Play|Stop"&gt;
            &lt;param name="control" value="solfa"&gt;
            &lt;param name="mode" value="PersonalSettings"&gt;
            &lt;param name="mode" value="NotesReading"&gt;
            &lt;param name='fragment' value='24,34,44;(s c)(n * c),(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * c g+)(n * c g-),(n * n)'&gt;
            &lt;param name='fragment' value='24,34,44;(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * n.)(n * c),(n * s g+)(n * s)(n * s)(n * s g-),(n * s g+)(n * s)(n * s)(n * s g-),(n * c g+)(n * c +l g-),(n * n)'&gt;
            &lt;param name='fragment' value='24,34,44;(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * c g+)(n * c)(n * c)(n * c g-),(n * c)(n * n.)'&gt;
            &lt;param name='fragment' value='24,34,44;(n * c g+)(n * c)(n * c)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * s g+)(n * s)(n * s)(n * s g-),(n * n),(n * n)'&gt;
            &lt;param name='fragment' value='34,44;(n * n)(n * c)(n * n)(n * c)(n * c g+)(n * c g-)(n * c g+)(n * c +l g-)(n * c g+)(n * s)(n * s g-)(n * c g+)(n * s)(n * s g-)(n * c g+)(n * c +l g-)(n * n)'&gt;
            &lt;param name='fragment' value='24,34,44;(s c)(n * c),(n * s g+)(n * s)(n * s)(n * s g-),(n * c)(n * n)(n * s g+)(n * s g-),(n * b)'&gt;
            &lt;param name="clef" value="Sol;a3;a5"&gt;
            &lt;param name="clef" value="Fa4;a2;e4"&gt;
            &lt;param name="time" value="24,34,44"&gt;
            &lt;param name="key" value="all"&gt;
            &lt;param name="maxInterval" value="4"&gt;
        &lt;/object&gt;

</pre>

<h3><a name="Fragment_syntax">Fragment syntax</a></h3>
<a href="#TOC">TOC</a>

<pre>
Fragments will be divided into 'segments'. Each segment division line is a point
in wich a barline can be inserted:


    =====|=============|============|===============|=======



In some cases the pattern represented by the fragment requires a certain barline
alignment. Let's define:

    tam - Time to align to barline ('am' stands for 'align to measure')

    &lt;------------- tam -------------&gt;
    =====|=============|============||===============|=======

If a fragment does not require any special alignment for a barline then tam=0



A fragment can start in any place, not necesarily aligned to beat. Therefore
there will be a required time to align to beat:

    tab - Time to align to beat ('ab' stands for 'align to beat')

    &lt;--tab--&gt;&lt;------------- tam -------------&gt;
    |        =====|=============|============||===============|=======


If the fragment starts aligned to beat then tab=0
In theory, a fragment will never start with rests, as starting with a rest is equivalent to not being
beat aligned.

<b>Important:</b> in practice, the way of indicate that the fragment is not beat aligned is by
starting the segment with rests. These rests will be removed by the program and its
duration will be assigned to time tab.
</pre>

<h4>Rules</h4>
<p>Fragments are encoded in LDP language</p>
<p>Are composed of notes and rests. Notes will not have pitch; instead an asterisk (*)
must be placed.</p>
<p>Fragments must be in LDP normal form: right case, no extra spaces.<p>
<p>The point at which a barline can be inserted must be marked by a comma (,)</p>
<p>The point at which a barline must be inserted must be marked by a vertical bar (|)</p>
<p>Examples:</p>
<pre class="example">
&lt;param name='fragment' value='24;(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-)'&gt;
&lt;param name='fragment' value='24,34,44;(s c)(n * c),(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * c g+)(n * c g-),(n * n)'&gt;
&lt;param name='fragment' value='24,34,44;(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * n.)(n * c),(n * s g+)(n * s)(n * s)(n * s g-),(n * s g+)(n * s)(n * s)(n * s g-),(n * c g+)(n * c +l g-),(n * n)'&gt;
&lt;param name='fragment' value='24,34,44;(n * c g+)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * c g+)(n * c)(n * c)(n * c g-),(n * c)(n * n.)'&gt;
&lt;param name='fragment' value='24,34,44;(n * c g+)(n * c)(n * c)(n * c +l g-),(n * c g+)(n * s)(n * s g-),(n * s g+)(n * s)(n * s)(n * s g-),(n * n),(n * n)'&gt;
&lt;param name='fragment' value='34,44;(n * n)(n * c)(n * n)(n * c)(n * c g+)(n * c g-)(n * c g+)(n * c +l g-)(n * c g+)(n * s)(n * s g-)(n * c g+)(n * s)(n * s g-)(n * c g+)(n * c +l g-)(n * n)'&gt;
&lt;param name='fragment' value='24,34,44;(s c)(n * c),(n * s g+)(n * s)(n * s)(n * s g-),(n * c)(n * n)(n * s g+)(n * s g-),(n * b)'&gt;
</pre>
</body>

</html>
