Installing wxWidgets in Linux
==============================

Last updated: 30/Nov/2008



This document is a quick guide to install wxWidgets for building LenMus package.

THIS GUIDE ARE JUST MY NOTES FOR DOING IT EACH TIME I HAVE TO INSTALL A NEW WXWIDGETS VERSION. This notes should be enough in most cases. Please refer to wxWidgets documentation, for more detailed instructions. 

This guide probably contains errors and inaccuracies. Please contact us if you would like to help us with creating a better and error-free document.

In this instructions it is assumed that wxWidgets is installed in /home/cecilio/wxWidgets/. Please replace as appropriate.


Steps to do:

1. Download the wxGTK source archive from http://www.wxwidgets.org/downloads/. 

2. Expand it (double click) in the final destination (in my case, in /home/cecilio/wxWidgets/wxGTK-2.8.9 ). Later, you won't be able to move it without breaking the build.

3. Add LenMus patches (see specific document).

4. Open a terminal window and move to the installation folder:

    $ cd /home/cecilio/wxWidgets/wxGTK-2.8.9

5. Create a new folder for this build. This enables us to have many wxWidgets builds (i.e. a debug and a release one). This sub directory will contain the compiled libraries to add later to your programs.

    $ mkdir build-debug   or   mkdir build-release
    $ cd build-debug      or   cd build-release

6. Call 'configure' with the desired options for the build. For LenMus:
IMPORTANT: If you decide you'd like to rebuild with a different set of options you must first run `make distclean`  in order to remove generated configuration files before you run the configure script again with your new options.

Debug build:
    $ ../configure --prefix=$(pwd) --enable-debug --disable-shared --enable-unicode --with-gtk --disable-compat24 --disable-compat26 --enable-std_iostreams=no

Release build:
    $ ../configure --prefix=$(pwd) --disable-debug --disable-shared --enable-unicode --with-gtk --disable-compat24 --disable-compat26 --enable-std_iostreams=no


The options you pass to configure at this point will determine what build you get.


The "--prefix=..." sets the path where the library built will be stored. The folder need not exist and is created in the process if it does not. This way you can make the well-arranged tree of wxWidgets libraries for various purposes, independent (and independently recompilable, e.g. with new wxWidgets releases) on each other. 

  --enable-unicode        compile wxString with Unicode support
  --disable-shared 		  will build static libs instead of shared ones
  --prefix=<path>		  allows you to let wxWidgets be installed at other locations than the default /usr/local
  --enable-debug          same as debug_flag and debug_info
  --enable-debug_flag     set __WXDEBUG__ flag (recommended for developers!)
  --enable-debug_info     create code with debugging information
  --enable-stl            use STL for containers
  --disable-std_iostreams don't use standard C++ stream classes
  --enable-streams        use wxStream etc. classes
  --with-sdl              use SDL for audio on Unix
  --with-libxpm           use libxpm (XPM file format)

    (for a list of all possible options, write ../configure --help)

If it stops saying it can't find a package, install it (with -dev packages if any) and run configure again. 

Notes:
*	--prefix' won't accept relative paths


7. When 'configure' is done without errors, you are ready to build (using make):

    $ make     or   make -j2  (dual CPU)

8. Finally, re-direct or create create a symbolic link to the wx-config file in /usr/local/bin/wx-config:

    $ sudo cp /home/cecilio/wxWidgets/wxGTK-2.8.9/build-debug/wx-config /usr/local/bin/wx-config

And this is it!

The libraries will be where prefix told them to be, and wx-config will know where they are.



Test installation
-----------------------

Open a terminal and type

$ wx-config --version

It should be the version you just built.

If it is not:

    try running which wx-config and see if it is the one you just installed (if you did not change the default value, you installed /usr/local/bin/wx-config) if you get something like /usr/bin/wx-config while you installed /usr/local/bin/wx-config, it means there is another version of wxWidgets installed somewhere else, probably installed by the system. You can quickly get it out the way with a hacky command like sudo mv /usr/bin/wx-config /usr/bin/wx-config-old1. 

Then, to test more in depth, you can look at the samples. Open the Samples folder located at wxGTK-2.8.9/gtk-build/samples (be careful : wxGTK-2.8.9/samples contains the source code, while wxGTK-2.8.9/gtk-build/samples contains the makefiles for your system. for building samples, you will want to cd into the latter, while to study the code you will want to open the former)

cd into one of the samples, and type make. You can then open the sample to see wxWidgets in action.

* Test the installation using a sample:
    g++ test.c++ -o hello `wx-config` --libs --debug=no` `wx-config --cxxflags` -D NDEBUG  


